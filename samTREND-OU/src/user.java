
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import javax.swing.SwingUtilities;


/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Admin
 */
public class user extends javax.swing.JFrame {

    /**
     * Creates new form user
     */
    public user() {
        this.setVisible(true);
        initComponents();
        ImageIcon img = new ImageIcon("data\\img1234.jpg");     
        setIconImage(img.getImage());
   
        //label4.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JTextField();
        label3 = new java.awt.Label();
        jButton1 = new javax.swing.JButton();
        label4 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setFont(new java.awt.Font("Arial", 1, 12));
        label1.setText("User Name");

        label2.setFont(new java.awt.Font("Arial", 1, 12));
        label2.setText("Password");

        //To select all text when focus is on user field
        jTextField1.addFocusListener(new java.awt.event.FocusAdapter(){
        	public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater( new Runnable() {

                                @Override
                                public void run() {
                                	jTextField1.selectAll();              
                                }
                        });
            }
        });

        //To select all text when focus is on password field
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter(){
        	public void focusGained(java.awt.event.FocusEvent evt) {
                SwingUtilities.invokeLater( new Runnable() {

                                @Override
                                public void run() {
                                	jPasswordField1.selectAll();              
                                }
                        });
            }
        });

        
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER, false)
                    .addComponent(label2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER, false)
                    .addComponent(jPasswordField1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        label3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label3.setForeground(new java.awt.Color(138, 0, 0));
//        label3.setText("SAMSSARA CAPITAL TECHNOLOGIES");

        jButton1.setText("LOGIN");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        
        jButton1.registerKeyboardAction(jButton1.getActionForKeyStroke(
                KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, false)),
                KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, false),
                JComponent.WHEN_FOCUSED);

        jButton1.registerKeyboardAction(jButton1.getActionForKeyStroke(
                KeyStroke.getKeyStroke(KeyEvent.VK_SPACE, 0, true)),
                KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0, true),
                JComponent.WHEN_FOCUSED);

//        jButton1.addKeyListener(new java.awt.event.KeyListener(){
//        	 public void actionPerformed(java.awt.event.ActionEvent evt) {
//                 jButton1ActionPerformed(evt);
//             }
//         });
        

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jButton1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(158, 158, 158))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   
    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed

    	// TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    	LoginSequence();
    }
    private void LoginSequence(){
        label4.setForeground(new java.awt.Color(0, 0, 0));
        label4.setFont(new java.awt.Font("Arial", 0, 12));
        label4.setText("Authenticating... Please wait!");
    	jButton1.setEnabled(false);
        jTextField1.setEnabled(false);
        jPasswordField1.setEnabled(false);
        
        Utils UtilObj = new Utils();
        String a = jTextField1.getText();
        char[] PassText = jPasswordField1.getPassword();
    	String b = "";
        for (int i=0;i<PassText.length;i++){
    		b = b + PassText[i];
    	}
//        String b = jPasswordField1.getText();

        if (a.length()>2 && b.length()>2){
        boolean ConnectionCheck = false;
        int CheckForUpdates = 0;
		try{
	        String s="ftp://samssara:samss123$@ftp.samssara.com/samTrend/users.txt";
			//admin login
	        if(a.equalsIgnoreCase("admin")&&b.equals("samtrend")){
				Thread.sleep(2000);
				ConnectionCheck = true;
			}else{
				try{
					String ClientCode = null;
					try{
						ArrayList ParamList = UtilObj.LoadDataFromFile("data\\Config\\Parameters.txt");
						for(int i=0;i<ParamList.size();i++) {
							String data[] = ((String)ParamList.get(i)).split("\t");						
							String Field = data[0].trim();
							String Value = data[1].trim();
							//add all the parameters here
							if(Field.equalsIgnoreCase("ClientUniqueCode")) {
								ClientCode = Value;
							}
							if(Field.equalsIgnoreCase("CheckForUpdates")) {
								CheckForUpdates = Integer.parseInt(Value);
							}

						}
					}catch (Exception e){
						label4.setText("Installation Error!");
					}
					
					if (!ClientCode.equals(null)){
						//connecting to server for authentication
						URL u = new URL(s);
						URLConnection uc = u.openConnection();
						uc.setConnectTimeout(20*1000);
						uc.setReadTimeout(20*1000);
						java.io.InputStream in = uc.getInputStream();
					    BufferedReader br = new BufferedReader(new InputStreamReader(in));
					    String strLine;
					    String[] ClientString = ClientCode.split("_");
					    while ((strLine = br.readLine()) != null)   {
					    	String[] Loginstr = strLine.split("\t");
					    	if (a.equalsIgnoreCase(Loginstr[0]) && b.equals(Loginstr[1]) 
					    			&& ClientString[0].equalsIgnoreCase(Loginstr[2]) && ClientString[1].equalsIgnoreCase(Loginstr[3])){
								ConnectionCheck = true;
					    	}
					    }
					    if (!ConnectionCheck){
					    	label4.setText("Invalid Login Password!");
					    }
					}else{
						label4.setText("Installation Error!");
					}
				}catch (Exception e){
					label4.setText("Cannot connect to server...");
				}
			}
			
	        //if authentication successful logging in
			if (ConnectionCheck){
				if (CheckForUpdates == 1){
				    String Ver="ftp://samssara:samss123$@ftp.samssara.com/LatestEXE/samTREND/Version.txt";
					URL u = new URL(Ver);
					URLConnection uc = u.openConnection();
					uc.setConnectTimeout(20*1000);
					uc.setReadTimeout(20*1000);
					java.io.InputStream in = uc.getInputStream();
				    BufferedReader br = new BufferedReader(new InputStreamReader(in));
				    String strLine;
				    String CurrentVersion = "20130215-17";
				    while ((strLine = br.readLine()) != null && CheckForUpdates == 1)   {
				    	String LatestVersion = strLine.trim();
				    	if (!CurrentVersion.equalsIgnoreCase(LatestVersion)){
				    		try{
				    		Process Update = Runtime.getRuntime().exec("MCXODININSTR_NSE.exe");
					    	Process KillSelf = Runtime.getRuntime().exec("taskkill /F /IM samTrend.exe");
					    	System.exit(0);
				    		}catch (Exception e){}
				    	}
				    	
				    }
				}
				this.setVisible(false);
			    new tr1().setVisible(true);
//			    TrendMain StrategyObj = new TrendMain();
//			    StrategyObj.StartStrategy();
		    	try{
			    	Process p = Runtime.getRuntime().exec("taskkill /F /IM MCXODININSTR.exe");
			    	Thread.sleep(2000);
			    }catch (Exception e){}
			    try{
			    	Process p = Runtime.getRuntime().exec("MCXODININSTR.exe");
			    }catch (Exception e){
			    	e.printStackTrace();
			    	UtilObj.infoBox("Can't connect to execution server!", "samTREND");
			    }
			}
		}catch(Exception e){
            jButton1.setEnabled(true);
			label4.setText("Cannot connect to server...");
		}
        }else{
	    	label4.setText("Invalid Login Password!");
        }

        jButton1.setEnabled(true);
        jTextField1.setEnabled(true);
        jPasswordField1.setEnabled(true);


    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(user.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new user().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    // End of variables declaration//GEN-END:variables
}
